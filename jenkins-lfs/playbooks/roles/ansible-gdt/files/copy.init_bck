#!/bin/bash

### BEGIN INIT INFO
# Provides:          crio
# Required-Start:    $network $remote_fs
# Required-Stop:     $network $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start and stop CRI-O container runtime
# Description:       CRI-O is a lightweight container runtime for Kubernetes
### END INIT INFO

CRIO_BIN="/usr/local/bin/crio -c /etc/crio/crio.conf"
CRIO_PIDFILE="/var/run/crio.pid"
CRIO_LOGFILE="/var/log/crio.log"

start() {
  echo "Starting CRI-O..."
  if [ -f "$CRIO_PIDFILE" ] && kill -0 $(cat "$CRIO_PIDFILE") 2>/dev/null; then
    echo "CRI-O is already running."
    return 0
  fi
  nohup "$CRIO_BIN" > "$CRIO_LOGFILE" 2>&1 &
  echo $! > "$CRIO_PIDFILE"
  echo "CRI-O started."
}

stop() {
  echo "Stopping CRI-O..."
  if [ -f "$CRIO_PIDFILE" ] && kill -0 $(cat "$CRIO_PIDFILE") 2>/dev/null; then
    kill $(cat "$CRIO_PIDFILE") && rm -f "$CRIO_PIDFILE"
    echo "CRI-O stopped."
  else
    echo "CRI-O is not running."
  fi
}

status() {
  if [ -f "$CRIO_PIDFILE" ] && kill -0 $(cat "$CRIO_PIDFILE") 2>/dev/null; then
    echo "CRI-O is running (PID: $(cat "$CRIO_PIDFILE"))."
  else
    echo "CRI-O is not running."
  fi
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart)
    stop
    start
    ;;
  status)
    status
    ;;
  *)
    echo "Usage: $0 {start|stop|restart|status}"
    exit 1
    ;;
esac

exit 0