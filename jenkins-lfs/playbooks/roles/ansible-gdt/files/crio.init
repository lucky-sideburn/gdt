#!/bin/bash

### BEGIN INIT INFO
# Provides:          crio
# Required-Start:    $network $remote_fs
# Required-Stop:     $network $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start and stop CRI-O container runtime
# Description:       CRI-O is a lightweight container runtime for Kubernetes
### END INIT INFO

CRIO_BIN="/usr/local/bin/crio"
CRIO_PIDFILE="/var/run/crio.pid"
CRIO_LOGFILE="/var/log/crio.log"
. /etc/environment

GREEN="\033[38;2;0;255;0m"
NC="\033[0m" # No Color

start() {
  echo -e "  ${GREEN}*${NC}   Starting CRI-O... [${GREEN}OK${NC}]${NC}"
  if [ -f "$CRIO_PIDFILE" ] && kill -0 $(cat "$CRIO_PIDFILE") 2>/dev/null; then
    echo -e "  ${GREEN}*${NC}   CRI-O is already running. [${GREEN}OK${NC}]${NC}"
    return 0
  fi
  nohup "$CRIO_BIN" > "$CRIO_LOGFILE" 2>&1 &
  echo $! > "$CRIO_PIDFILE"
  echo -e "  ${GREEN}*${NC}   CRI-O started. [${GREEN}OK${NC}]${NC}"
}

stop() {
  echo -e "  ${GREEN}*${NC}   Stopping CRI-O... [${GREEN}OK${NC}]${NC}"
  if [ -f "$CRIO_PIDFILE" ] && kill -0 $(cat "$CRIO_PIDFILE") 2>/dev/null; then
    kill $(cat "$CRIO_PIDFILE") && rm -f "$CRIO_PIDFILE"
    echo -e "  ${GREEN}*${NC}   CRI-O stopped. [${GREEN}OK${NC}]${NC}"
  else
    echo -e "  ${GREEN}*${NC}   CRI-O is not running. [${GREEN}OK${NC}]${NC}"
  fi
 }

status() {
  if [ -f "$CRIO_PIDFILE" ] && kill -0 $(cat "$CRIO_PIDFILE") 2>/dev/null; then
    echo -e " ${GREEN}*${NC}    CRI-O is running (PID: $(cat "$CRIO_PIDFILE")). [${GREEN}OK${NC}]${NC}"
  else
    echo -e " ${GREEN}*${NC}    CRI-O is not running. [${GREEN}OK${NC}]${NC}"
  fi
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart)
    stop
    start
    ;;
  status)
    status
    ;;
  *)
    echo -e "${GREEN}*${NC} Usage: $0 {start|stop|restart|status} [${GREEN}OK${NC}]${NC}"
    exit 1
    ;;
esac

exit 0